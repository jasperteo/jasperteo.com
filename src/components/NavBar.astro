---
import { safeParse } from "@valibot/valibot";
import { Link } from "@kobalte/core/link";

import {
	ThemeToggle,
	defaultTheme,
	storageKey,
	themeEnum,
} from "@/components/theme-toggle";
import type { Theme } from "@/components/theme-toggle";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";

const { pathname } = Astro.url;
const isActive = (href: string) =>
	href === pathname || href === pathname.replace(/\/$/, "");

const navList = [
	{ href: "/", icon: "carbon:home", label: "home" },
	{ href: "/projects", icon: "carbon:devices-apps", label: "projects" },
];

const cookieTheme = Astro.cookies.get(storageKey)?.value;
const prefersTheme = Astro.request.headers.get("Sec-CH-Prefers-Color-Scheme");

const storedTheme: Theme = safeParse(themeEnum, cookieTheme).success
	? (cookieTheme as Theme)
	: safeParse(themeEnum, prefersTheme).success
		? (prefersTheme as Theme)
		: defaultTheme;
---

<nav
	class="my-5 h-9 flex place-content-center gap-2 font-title sm:(my-10 mr-10 justify-end)"
>
	{
		navList.map(({ href, icon, label }) => (
			<>
				<Button
					class:list={[
						{ active: isActive(href) },
						"gap-x-2 [&.active]:(animate-swing animate-delay-150 shadow-lg shadow-primary/20) sm:text-base",
					]}
					variant="ghost"
					as={Link}
					href={href}
				>
					<iconify-icon class="text-xl" icon={icon} />
					{label}
				</Button>
				<Separator orientation="vertical" />
			</>
		))
	}

	<div class="mx-4 h-9 w-9">
		<ThemeToggle
			storedTheme={storedTheme}
			client:only="solid-js"
			transition:persist="Theme Toggle"
			transition:persist-props
		/>
	</div>
</nav>
