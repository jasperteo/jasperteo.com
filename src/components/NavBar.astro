---
import { safeParse } from "@valibot/valibot";
import { Link } from "@kobalte/core/link";

import { Menu, navList } from "@/components/menu";
import {
	ThemeToggle,
	defaultTheme,
	storageKey,
	themeEnum,
} from "@/components/theme-toggle";
import type { Theme } from "@/components/theme-toggle";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";

const { pathname } = Astro.url;
const isActive = (href: string) =>
	href === pathname || href === pathname.replace(/\/$/, "");

const cookieTheme = Astro.cookies.get(storageKey)?.value;
const prefersTheme = Astro.request.headers.get("Sec-CH-Prefers-Color-Scheme");

const storedTheme: Theme = safeParse(themeEnum, cookieTheme).success
	? (cookieTheme as Theme)
	: safeParse(themeEnum, prefersTheme).success
		? (prefersTheme as Theme)
		: defaultTheme;
---

<nav
	class="my-5 h-fit flex flex-col place-content-center gap-x-2 gap-y-6 font-title sm:(my-10 mr-10 h-9 flex-row justify-end)"
>
	<div class="hidden gap-2 sm:flex">
		{
			navList.map(({ href, icon, label }) => (
				<>
					<Button
						class:list={[
							{ active: isActive(href) },
							"gap-x-2 text-base [&.active]:(animate-swing animate-delay-150 shadow-lg shadow-primary/20)",
						]}
						variant="ghost"
						as={Link}
						href={href}
					>
						<iconify-icon class="text-xl" icon={icon} />
						{label}
					</Button>
					<Separator orientation="vertical" />
				</>
			))
		}
	</div>

	<div class="mx-auto h-9 w-9 sm:mx-4">
		<ThemeToggle
			storedTheme={storedTheme}
			client:only="solid-js"
			transition:persist="Theme Toggle"
			transition:persist-props
		/>
	</div>

	<div class="sm:hidden">
		<Menu client:load />
	</div>
</nav>
